// <auto-generated />
using System;
using Cocktails.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cocktails.API.Migrations
{
    [DbContext(typeof(CocktailsDbContext))]
    [Migration("20200623141645_update_cocktail")]
    partial class update_cocktail
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cocktails.API.Models.Cocktail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Alcool")
                        .HasColumnType("bit");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Origine")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(3,1)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Cocktails");
                });

            modelBuilder.Entity("Cocktails.API.Models.Ingredient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Mesure")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Teneur_Alcool")
                        .HasColumnType("decimal(2,2)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Cocktails.API.Models.Preparation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ID_Cocktail")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Ing")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantite")
                        .HasColumnType("decimal(3,2)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ID_Cocktail");

                    b.HasIndex("ID_Ing");

                    b.ToTable("Preparations");
                });

            modelBuilder.Entity("Cocktails.API.Models.Preparation", b =>
                {
                    b.HasOne("Cocktails.API.Models.Cocktail", "cocktail")
                        .WithMany()
                        .HasForeignKey("ID_Cocktail");

                    b.HasOne("Cocktails.API.Models.Ingredient", "ingredient")
                        .WithMany()
                        .HasForeignKey("ID_Ing");
                });
#pragma warning restore 612, 618
        }
    }
}
